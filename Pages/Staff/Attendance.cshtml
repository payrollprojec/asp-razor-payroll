@page
@model PayrollAppRazorPages.Pages.Staff.AttendanceModel
@{
    ViewData["Title"] = "Attendance";
}
<style>
    .fixedPart {
        position: -webkit-sticky;
        position: sticky;
        top: 0;
    }

    .fixedTable th {
        max-width: 60px;
        text-align: center;
    }

    .fixedTable td {
        text-align: center;
        background-color: white;
    }
    @@media (max-width: 1230.98px) {
        .fancy-floating {
            margin-top: 0 !important;
            padding: 0 !important;
        }
    }
</style>

<div class="container row jumbotron bg-info" style="margin-left: 10px;">
    <div class="container row">
        <div class="col-auto text-white"><h4>Attendance</h4></div>
        <div class="col-auto">
            <form class="form-inline">
                <select class="form-control-sm mr-sm-3" asp-for="SelectedMonth" asp-items="Model.Months">
                </select>
                <select class="form-control-sm mr-sm-3" asp-for="SelectedYear" asp-items="Model.Years">
                </select>
                <input type="submit" value="Filter" />
            </form>
        </div>
    </div>
</div>

@if (Model.UserAttendance.Count == 0)
{
    <p>No attendance found in @Model.SelectedDate</p>
}
else
{
    Dictionary<string, int> dict = new Dictionary<string, int>();
    dict.Add("Present", 0);
    dict.Add("Absent", 0);
    dict.Add("Leave", 0);
    dict.Add("Sick", 0);

    foreach (var item in Model.UserAttendance)
    {
        dict[item.AttendanceStatus.Status] += 1;
    }

    <div class="row fancy-floating" style="padding: 0 55px; margin-top: -156px; z-index: 999">
        @*Column 1*@
        <div class="col"></div>
        @*<div class="col">
            <table class="table table-striped table-bordered table-hover table-sm text-center" style="background:white;">
                <thead class="thead-light">
                    <tr>
                        <th>
                            Day
                        </th>
                        <th>
                            Date
                        </th>
                        <th>
                            Status
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.UserAttendance)
                    {
                        <tr>
                            <td>
                                @(item.PunchDate.Value.DayOfWeek)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PunchDate)
                            </td>
                            <td>
                                @if (item.AttendanceStatus.Status != "Present")
                                {
                                    <span style="color: deeppink;"> @Html.DisplayFor(modelItem => item.AttendanceStatus.Status)</span>
                                }
                                else
                                {
                                    @Html.DisplayFor(modelItem => item.AttendanceStatus.Status)

                                }
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>*@

        @*Column 2*@
        <div class="col-sm-7" style="max-width:500px;">
            <div class=" fixedPart">
                @*Table 1*@
                <table class="table table-sm table-bordered table-hover fixedTable" style="background-color: white">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">Attendance Status</th>
                            <th scope="col">Count</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <th scope="row">Present</th>
                            <td> @dict["Present"]/@Model.WeekdaysCount</td>
                        </tr>
                        <tr>
                            <th scope="row">Absent</th>
                            <td>@dict["Absent"]</td>
                        </tr>
                        <tr>
                            <th scope="row">Leave</th>
                            <td>@dict["Leave"]</td>
                        </tr>
                        <tr>
                            <th scope="row">Sick</th>
                            <td>@dict["Sick"]</td>
                        </tr>
                    </tbody>
                </table>
                <br />
                @*Table 2*@
                @*<table class="table table-sm table-bordered table-hover fixedTable">
                    <thead class="thead-light">
                        <tr>
                            <th> @Html.DisplayNameFor(model => model.SelectedMonHoliday[0].HolidayDate) </th>
                            <th> @Html.DisplayNameFor(model => model.SelectedMonHoliday[0].HolidayDes) </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.SelectedMonHoliday)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.HolidayDate.Value.DayOfWeek) <span>, </span>
                                    @Html.DisplayFor(modelItem => item.HolidayDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.HolidayDes)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>*@
            </div>


        </div>
        @*End Column 2*@

    </div>
}

@{
    int days = DateTime.DaysInMonth(int.Parse(Model.SelectedYear), int.Parse(Model.SelectedMonth));
    List<DateTime> dates = new List<DateTime>();
    for (int i = 1; i <= days; i++)
    {
        dates.Add(new DateTime(int.Parse(Model.SelectedYear), int.Parse(Model.SelectedMonth), i));
    }
    //int nWeeks = (int)Math.Ceiling((double)days / (double)7);
    List<List<DateTime>> datesPerWeek = new List<List<DateTime>>();
    int nWeeks = 1;
    foreach (DateTime dt in dates)
    {
        if (dt.DayOfWeek == DayOfWeek.Saturday)
        {
            nWeeks++;
        }
    }
    for (int i = 0; i < nWeeks; i++)
    {
        datesPerWeek.Add(new List<DateTime>());
    }
    int n = 0;
    foreach (DateTime dt in dates)
    {
        datesPerWeek[n].Add(dt);
        if (dt.DayOfWeek == DayOfWeek.Saturday)
        {
            n++;
        }
    }
}

<table class="table table-bordered table-hover table-sm text-center">
    <thead class="thead-light">
        <tr>
            <th>
                Sun
            </th>
            <th>
                Mon
            </th>
            <th>
                Tue
            </th>
            <th>
                Wed
            </th>
            <th>
                Thu
            </th>
            <th>
                Fri
            </th>
            <th>
                Sat
            </th>
        </tr>
    </thead>
    @foreach (List<DateTime> dts in datesPerWeek)
    {
        <tr>
            @foreach (DateTime dt in dts)
            {
                if (dt.Day == 1 && dt.DayOfWeek != DayOfWeek.Sunday)
                {
                    int firstday = (int)dt.DayOfWeek;
                    for (int j = 0; j < firstday; j++)
                    {
                        <td style="background-color: grey;"></td>
                    }
                }

                <td style="@(Model.Days.Contains(((int)dt.DayOfWeek).ToString())? "background-color: salmon": ""); width: 75px; height: 80px; ">
                    <div class="row">
                        <div class="col">
                            @dt.Day
                        </div>
                        <div class="col">
                            @foreach (var att in Model.UserAttendance)
                            {
                                if (((DateTime)att.PunchDate).Date == dt.Date)
                                {
                                    <span class="text-@(att.AttendanceStatus.Status == "Present"? "success":"warning")">@att.AttendanceStatus.Status</span><br />
                                }
                            }
                        </div>
                    </div>

                    @foreach (var hol in Model.Holidays)
                    {
                        if (((DateTime)hol.HolidayDate).Date == dt.Date)
                        {
                            <span class="small" style="word-break: break-all; color: #666">@hol.HolidayDes</span>
                        }
                    }

                </td>
            }
        </tr>
    }
</table>
